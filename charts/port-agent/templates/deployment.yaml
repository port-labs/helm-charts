apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "port-agent.fullname" . }}
  labels:
    {{- include "port-agent.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.rolloutStrategy }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "port-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "port-agent.labels" . | nindent 8 }}
    spec:
      {{- with .Values.podServiceAccount.name }}
      serviceAccountName: {{ . }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext: 
      {{- if .Values.podSecurityContext }}
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
          {{- if .Values.containerSecurityContext }}
            {{- toYaml .Values.containerSecurityContext | nindent 14 }}
          {{- end }}
          env:
            {{- if .Values.selfSignedCertificate.enabled }}
            {{/* Used for requests library in python - For httpx please use SSL_CERT_FILE */}}
            - name: REQUESTS_CA_BUNDLE
              value: /etc/ssl/certs/ca-certificates.crt
            {{- end }}
            {{- include "port-agent.envVariables" . | indent 12 }}
          {{- if eq .Values.secret.useExistingSecret true }}
          envFrom:
            - secretRef:
                name: {{ include "port-agent.secretName" . }}
          {{- end }}
          resources:
          {{- if .Values.resources }}
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.controlThePayloadConfig }}
            - mountPath: /app/control_the_payload_config.json
              name: {{ include "port-agent.fullname" . }}
              subPath: controlThePayloadConfig
            {{- end }}
          {{- if .Values.selfSignedCertificate.enabled }}
            - name: certificates
              mountPath: /usr/local/share/ca-certificates/cert.crt
              subPath: cert.crt
              readOnly: true
          {{- end }}
      volumes:
        {{- if .Values.controlThePayloadConfig }}
        - name: {{ include "port-agent.fullname" . }}
          configMap:
            name: {{ include "port-agent.fullname" . }}
        {{- end }}
        {{- if and .Values.selfSignedCertificate.enabled .Values.selfSignedCertificate.secret.useExistingSecret }}
        - name: certificates
          projected:
            sources:
              - secret:
                  name: {{ .Values.selfSignedCertificate.secret.name }}
                  items:
                    - key: {{ .Values.selfSignedCertificate.secret.key }}
                      path: cert.crt
        {{- else if .Values.selfSignedCertificate.enabled }}
        - name: certificates
          projected:
            sources:
              - secret:
                  name: {{ include "selfSignedCertName" . }}
                  items:
                    - key: crt
                      path: cert.crt
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
