resyncInterval: 0
stateKey: ""
# Deprecated. Will be used only for installation, configure this from the ui / migration from older versions.
deleteDependents: false
# Deprecated. Will be used only for installation, configure this from the ui / migration from older versions.
createMissingRelatedEntities: false
portBaseUrl: https://api.getport.io
createDefaultResources: true
overwriteConfigurationOnRestart: false

extraLabels: {}
# port: true

image:
  repository: ghcr.io/port-labs/port-k8s-exporter
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

eventListener:
  type: "POLLING"
  pollingRate: 60
  # ---- KAFKA CONFIGURATION ----
  # type: "KAFKA"
  brokers: "b-1-public.publicclusterprod.t9rw6w.c1.kafka.eu-west-1.amazonaws.com:9196,b-2-public.publicclusterprod.t9rw6w.c1.kafka.eu-west-1.amazonaws.com:9196,b-3-public.publicclusterprod.t9rw6w.c1.kafka.eu-west-1.amazonaws.com:9196"
  securityProtocol: "SASL_SSL"
  authenticationMechanism: "SCRAM-SHA-512"

httpLoggingEnabled: true
secret:
  annotations: {}
  name: ""
  secrets:
    portClientId: ""
    portClientSecret: ""
  # secret.useExistingSecret -- Enable this if you wish to create your own secret with credentials.
  useExistingSecret: false

configMap:
  annotations: {}
  config: ""
  name: ""
  # configMap.create -- Disable to specify your own configmap to be used.
  create: true

serviceAccount:
  create: true
  annotations: {}
  name: ""

clusterRole:
  annotations: {}
  name: ""
  apiGroups:
    - "'*'"
  resources:
    - "'*'"

clusterRoleBinding:
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

resources:
  requests:
    memory: "512Mi"
    cpu: "200m"
  limits:
    memory: "1024Mi"
    cpu: "500m"

nodeSelector: {}

tolerations: []

affinity: {}

extraEnv: []
  # - name: "KUBECONFIG"
  #   value: /tmp/.kube/config

extraObjects: []
# - apiVersion: v1
#   kind: Secret
#   metadata:
#     name: kubeconfig
#   type: Opaque
#   stringData:

extraVolumes: []
  # - name: kubeconfig
  #   secret:
  #     secretName: kubeconfig

extraVolumeMounts: []
  # - name: kubeconfig
  #   mountPath: "/tmp/.kube"
