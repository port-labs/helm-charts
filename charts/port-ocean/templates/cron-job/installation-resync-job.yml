{{- $resyncOnInstall := (.Values.workload.cron).resyncOnInstall | default true }}
{{- $resyncOnUpgrade := (.Values.workload.cron).resyncOnUpgrade | default true }}
{{- if and (eq .Values.workload.kind "CronJob") (or $resyncOnInstall $resyncOnUpgrade) }}
{{- $jobName := (print (randAlphaNum 4) "-" .Release.Revision) | lower }}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install, post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded, hook-failed
  name: init-sync-{{ .Release.Name }}-{{ $jobName }}
spec:
  ttlSecondsAfterFinished: 600
  activeDeadlineSeconds: 180
  backoffLimit: 0
  template:
    spec:
      activeDeadlineSeconds: 180
      containers:
        - name: kubectl
          image: {{ .Values.workload.cron.kubectlImage }}
          command: [ "sh", "-c" ]
          env:
            - name: TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "port-ocean.cron.job-query-rbac-prefix" . }}-sa-token
                  key: token
          args:
            - kubectl create job --from=cronjob/{{ include "port-ocean.cronJobName" . }} init-sync-{{ $jobName }} --token=$TOKEN
      restartPolicy: Never
{{- end }}