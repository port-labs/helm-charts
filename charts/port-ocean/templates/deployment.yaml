{{- if eq .Values.workload.kind "Deployment" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "port-ocean.deploymentName" . }}
  labels:
    {{- include "port-ocean.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.workload.deployment.rolloutStrategy | default "Recreate" }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "port-ocean.deploymentName" . }}
      {{- include "port-ocean.selectorLabels" . | indent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "port-ocean.deploymentName" . }}
        {{- include "port-ocean.labels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- if .Values.podSecurityContext }}
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        {{- end }}
      initContainers:
        {{- with .Values.extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
      - name: {{ include "port-ocean.containerName" . }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        image: '{{ .Values.imageRegistry }}/port-ocean-{{ .Values.integration.type }}:{{ .Values.integration.version | default "latest" }}'
        {{- if .Values.service.enabled }}
        securityContext:
          {{- if .Values.containerSecurityContext }}
          {{- toYaml .Values.containerSecurityContext | nindent 10 }}
          {{- end }}
        resources:
          {{- if .Values.resources }}
          {{- toYaml .Values.resources | nindent 10 }}
          {{- end }}
        ports:
        - containerPort: {{.Values.service.port}}
          protocol: TCP
        {{- end }}
        env:
        {{- if .Values.selfSignedCertificate.enabled }}
          - name: SSL_CERT_FILE
            value: /etc/ssl/certs/ca-certificates.crt
          - name: REQUESTS_CA_BUNDLE
            value: /etc/ssl/certs/ca-certificates.crt
        {{- end }}
        {{- with .Values.extraEnv }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        envFrom:
          - configMapRef:
              name: {{ include "port-ocean.configMapName" . }}
          {{- include "port-ocean.additionalSecrets" . | nindent 10 }}
        volumeMounts:
        {{- if .Values.selfSignedCertificate.enabled }}
          - name: certificates
            mountPath: /usr/local/share/ca-certificates/cert.crt
            subPath: cert.crt
            readOnly: true
        {{- end }}
        {{- if (.Values.livenessProbe).enabled}}
        livenessProbe:
          httpGet:
            path: /docs
            port: {{.Values.service.port}}
          initialDelaySeconds: {{ default 30 .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ default 5 .Values.livenessProbe.timeoutSeconds }}
          successThreshold: 1
          failureThreshold: {{ default 3 .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if (.Values.readinessProbe).enabled}}
        readinessProbe:
          httpGet:
            path: /docs
            port: {{.Values.service.port}}
          initialDelaySeconds: {{ default 30 .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ default 10 .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ default 5 .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ default 2 .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ default 3 .Values.readinessProbe.failureThreshold }}
        {{- end }}
      volumes:
        {{- if and .Values.selfSignedCertificate.enabled .Values.selfSignedCertificate.secret.useExistingSecret }}
        - name: certificates
          projected:
            sources:
              - secret:
                  name: {{ .Values.selfSignedCertificate.secret.name }}
                  items:
                    - key: {{ .Values.selfSignedCertificate.secret.key }}
                      path: cert.crt
        {{- else if .Values.selfSignedCertificate.enabled }}
        - name: certificates
          projected:
            sources:
              - secret:
                  name: {{ include "port-ocean.selfSignedCertName" . }}
                  items:
                    - key: crt
                      path: cert.crt
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
