{{- $eventListener := .Values.integration.eventListener }}
{{- if eq .Values.workload.kind "CronJob" }}
  {{- $eventListener = dict "type" "ONCE" }}
{{- end}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "port-ocean.configMapName" . }}
data:
  OCEAN__PORT__BASE_URL: {{ .Values.port.baseUrl | quote }}
  OCEAN__INITIALIZE_PORT_RESOURCES: "{{ .Values.initializePortResources | default false }}"
  OCEAN__ALLOW_ENVIRONMENT_VARIABLES_JQ_ACCESS: "{{ .Values.allowEnvironmentVariablesJqAccess | default true }}"
  {{- if  and .Values.scheduledResyncInterval (not (eq .Values.workload.kind "CronJob")) }}
  OCEAN__SCHEDULED_RESYNC_INTERVAL: "{{ .Values.scheduledResyncInterval }}"
  {{- end }}
  {{- if .Values.clientTimeout }}
  OCEAN__CLIENT_TIMEOUT: "{{ .Values.clientTimeout }}"
  {{- end }}
  OCEAN__SEND_RAW_DATA_EXAMPLES: "{{ .Values.sendRawDataExamples | default true }}"
  OCEAN__EVENT_LISTENER: {{ $eventListener | toJson | quote }}
  {{- if .Values.integration.identifier }}
  OCEAN__INTEGRATION__IDENTIFIER: "{{ .Values.integration.identifier }}"
  {{- end }}
  {{- if .Values.integration.oauth.enabled }}
  OCEAN__OAUTH_ACCESS_TOKEN_FILE_PATH: "{{ .Values.integration.oauth.access_token_file_path }}"
  {{- end }}
  {{- if .Values.integration.processExecution.mode }}
  OCEAN__PROCESS_EXECUTION_MODE: "{{ .Values.integration.processExecution.mode }}"
  {{- if eq .Values.integration.processExecution.mode "multi_process" }}
  PROMETHEUS_MULTIPROC_DIR: "{{ .Values.integration.processExecution.prometheusMultiProcessDir }}"
  {{- end }}
  {{- end }}
  {{- if .Values.integration.config }}
  {{- range $key, $value := .Values.integration.config }}
  OCEAN__INTEGRATION__CONFIG__{{ $key | snakecase | upper }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.integration.extraConfig }}
  {{- range $key, $value := .Values.integration.extraConfig }}
  {{ $key | snakecase | upper }}: {{ $value | quote }}
  {{- end }}
  {{- end }}
